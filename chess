<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Colonies & Confederation Chess</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/chessboard-js/1.0.0/css/chessboard.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.10.3/chess.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chessboard-js/1.0.0/js/chessboard.min.js" defer></script>
    <style>
        body { 
            text-align: center; 
            font-family: 'Georgia', serif; 
            background-color: #f4e9d8; 
            color: #3e2723;
        }
        h1 {
            font-size: 36px;
            margin-bottom: 10px;
        }
        #board-container {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }
        #board {
            width: 500px;
            border: 5px solid #5d4037;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
        }
        .button-container {
            margin-top: 15px;
        }
        button {
            background-color: #6d4c41;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            margin: 5px;
            border-radius: 5px;
            font-size: 16px;
        }
        button:hover {
            background-color: #8d6e63;
        }
    </style>
</head>
<body>
    <h1>Colonies & Confederation Chess</h1>
    <div id="board-container">
        <div id="board"></div>
    </div>
    <div class="button-container">
        <button id="resetBtn">Reset Game</button>
        <button id="playAI">Play vs AI</button>
        <button id="playOnline">Play Online</button>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            var game = new Chess();
            var board;
            var stockfish = new Worker(URL.createObjectURL(new Blob(["importScripts('stockfish.js');"], { type: 'application/javascript' })));
            var isAI = false, isOnline = false;
    
            var customPieces = {
                wK: 'custom_pieces/white_governor.png',
                wQ: 'custom_pieces/white_chief.png',
                wB: 'custom_pieces/white_missionary.png',
                wN: 'custom_pieces/white_voyageur.png',
                wR: 'custom_pieces/white_fort.png',
                wP: 'custom_pieces/white_trapper.png',
                bK: 'custom_pieces/black_governor.png',
                bQ: 'custom_pieces/black_merchant.png',
                bB: 'custom_pieces/black_missionary.png',
                bN: 'custom_pieces/black_mounted_police.png',
                bR: 'custom_pieces/black_fort.png',
                bP: 'custom_pieces/black_settler.png'
            };
    
            board = Chessboard('board', {
                draggable: true,
                dropOffBoard: 'snapback',
                position: 'start',
                pieceTheme: function(piece) {
                    return customPieces[piece] || 'https://cdnjs.cloudflare.com/ajax/libs/chessboard-js/1.0.0/img/chesspieces/wikipedia/' + piece + '.png';
                },
                onDrop: function(source, target) {
                    var move = game.move({ from: source, to: target, promotion: 'q' });
                    if (move === null) return 'snapback';
                    board.position(game.fen());
                    if (isAI) setTimeout(aiMove, 500);
                }
            });
    
            function aiMove() {
                if (!game.game_over()) {
                    stockfish.postMessage("position fen " + game.fen());
                    stockfish.postMessage("go depth 10");
                }
            }
    
            stockfish.onmessage = function(event) {
                if (event.data.includes("bestmove")) {
                    var aiMove = event.data.split(" ")[1];
                    if (aiMove && aiMove !== "(none)") {
                        game.move({ from: aiMove.substring(0,2), to: aiMove.substring(2,4), promotion: 'q' });
                        board.position(game.fen());
                    }
                }
            };
    
            document.getElementById('resetBtn').addEventListener('click', function() {
                game.reset();
                board.start();
            });
    
            document.getElementById('playAI').addEventListener('click', function() {
                isAI = true;
                isOnline = false;
                aiMove();
            });
    
            document.getElementById('playOnline').addEventListener('click', function() {
                isOnline = true;
                isAI = false;
            });
        });
    </script>
</body>
</html>
